#!/usr/bin/env node
const program = require('commander')
const chalk = require('chalk')
const ora = require("ora");
const symbol = require('log-symbols')
const utils = require('./util.js');
const { isExist, prompt, downLoadTemplate, updateJsonFile } = utils;
const path = require('path');
const {resolve} = require('path')
const tplObj = require(`${__dirname}/../template`)

program
    .usage('<project-name>')

let create = async (ProjectName)=>{
    if(!ProjectName){
        console.log(symbol.warning, chalk.yellow('缺少参数无法创建仓库'));
        console.log(symbol.warning, chalk.yellow('参考 ysc create <project-name>'));
        process.exit(1);
    }
    await isExist(ProjectName)
        .then(()=>{
            prompt().then(answer => {
                try{
                    const { frame } = answer;
                    const url = `https://github.com:${tplObj[frame]}`;
                    try{
                        let loading = ora();
                        loading.start(`开始下载模板...`);
                        downLoadTemplate(ProjectName, url)
                            .then(() => {
                                loading.succeed(`模板下载完成`);
                                const filename = path.join(resolve('./'),`${ProjectName}/package.json`);
                                try{
                                    loading.start(`package.json更新repository：命令执行中...`);
                                    updateJsonFile(filename, {
                                        ...answer
                                    }).then(()=>{
                                        loading.succeed(`package.json更新repository: 命令执行完成`);
                                    })
                                }catch(err) {
                                    console.log(symbol.error, chalk.red('更新配置文件失败'));
                                    console.log(symbol.error, chalk.red(err));
                                    process.exit(1);
                                }
                            })
                    }catch (err){
                        console.log(symbol.warning, chalk.yellow('缺少参数无法创建仓库'));
                        console.log(symbol.warning, chalk.yellow('参考 ysc create <project-name>'));
                        process.exit(1);
                    }
                }catch(err) {
                    console.log(symbol.error, chalk.red('下载模板失败'));
                    console.log(symbol.error, chalk.red(err));
                    process.exit(1);
                }
            })
        });
}

program.parse(process.argv)

let ProjectName = program.args[0];
create(ProjectName).then(()=>{})